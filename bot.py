import logging
import time
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from tender_api import ProZorroAPI
from config import TELEGRAM_TOKEN, CHAT_ID, CHECK_INTERVAL

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

api = ProZorroAPI()


def start(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start.
    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.

    Args:
        update (Update): –û–±'—î–∫—Ç Telegram Update.
        context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.
    """
    update.message.reply_text("üëã –ü—Ä–∏–≤—ñ—Ç! –¶–µ –±–æ—Ç –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç–µ–Ω–¥–µ—Ä—ñ–≤ ProZorro.")


def help_command(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /help.
    –ü–æ—è—Å–Ω—é—î –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏.

    Args:
        update (Update): –û–±'—î–∫—Ç Telegram Update.
        context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.
    """
    help_text = (
        "üìñ –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
        "/start - –ø–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏\n"
        "/help - –¥–æ–≤—ñ–¥–∫–∞\n"
        "/tenders - –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–∏—Ö —Ç–µ–Ω–¥–µ—Ä—ñ–≤"
    )
    update.message.reply_text(help_text)


def tenders(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /tenders.
    –í–∏–∫–æ–Ω—É—î –ø–æ—à—É–∫ –Ω–æ–≤–∏—Ö —Ç–µ–Ω–¥–µ—Ä—ñ–≤ —ñ –Ω–∞–¥—Å–∏–ª–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.

    Args:
        update (Update): –û–±'—î–∫—Ç Telegram Update.
        context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.
    """
    try:
        results = api.search_tenders()

        if not results:
            update.message.reply_text("–ù–µ–º–∞—î –Ω–æ–≤–∏—Ö —Ç–µ–Ω–¥–µ—Ä—ñ–≤.")
            return

        for tender in results[:5]:  # –æ–±–º–µ–∂–∏–º–æ –≤–∏–≤—ñ–¥ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
            message = (
                f"üìå {tender['title']}\n"
                f"ID: {tender['tenderID']}\n"
                f"–°—Ç–∞—Ç—É—Å: {tender['status']}\n"
                f"–†–µ–≥—ñ–æ–Ω: {tender['region']}\n"
                f"–î–∞—Ç–∞: {tender['dateModified']}\n"
                f"https://prozorro.gov.ua/tender/{tender['id']}"
            )
            update.message.reply_text(message)

    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ —É –∫–æ–º–∞–Ω–¥—ñ /tenders: {e}")
        update.message.reply_text("‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ç–µ–Ω–¥–µ—Ä—ñ–≤.")


def auto_check(context: CallbackContext) -> None:
    """
    –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö —Ç–µ–Ω–¥–µ—Ä—ñ–≤.
    –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∑–∞ —Ä–æ–∑–∫–ª–∞–¥–æ–º –∫–æ–∂–Ω—ñ N —Å–µ–∫—É–Ω–¥.

    Args:
        context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.
    """
    try:
        results = api.search_tenders()

        for tender in results:
            message = (
                f"üìå {tender['title']}\n"
                f"ID: {tender['tenderID']}\n"
                f"–°—Ç–∞—Ç—É—Å: {tender['status']}\n"
                f"–†–µ–≥—ñ–æ–Ω: {tender['region']}\n"
                f"–î–∞—Ç–∞: {tender['dateModified']}\n"
                f"https://prozorro.gov.ua/tender/{tender['id']}"
            )
            context.bot.send_message(chat_id=CHAT_ID, text=message)

    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ-–ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {e}")


def main() -> None:
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É Telegram-–±–æ—Ç–∞.
    """
    updater = Updater(TELEGRAM_TOKEN, use_context=True)
    dispatcher = updater.dispatcher

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("help", help_command))
    dispatcher.add_handler(CommandHandler("tenders", tenders))

    # –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ–∂–Ω—ñ N —Å–µ–∫—É–Ω–¥
    job_queue = updater.job_queue
    job_queue.run_repeating(auto_check, interval=CHECK_INTERVAL, first=10)

    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
